"""
Классы анализа
"""

class UiMatrix:
    """
    Отвечает за вывод текущего состояния игры в консоль
    """


class UiUtils:
    """
    Ввыод на экран
    Очков пользователя
    Доступных для активации бонусов
    Текущий ход (номер)
    """


class UiCommand:
    """
    Отвечает за отображение интерфейса ввода комманд пользователем
    для управления игрой
    """


class UserCommand:
    """
    Отвечает за управление пользователем игрой
    через интерфейс
    - Ввод ходов
    - Конце игры
    - Начать заново
    - Отмотать до x хода
    - Активировать бонус
    """


class Element:
    """
    Элемент конкретного типа, который занимает
    клетку поля (A, B, C, D, E)
    Возможно, будет просто подкласс Enum
    """


class Combinations:
    """
    Следит, какие комбинации шаров были
    при уничтожении шаров при протекаии ивента,
    очки начисляются затем на основе этой информации
    """


class Score:
    """
    Отвечает за подсчёт очков для игрока
    в ходе игры.
    """


class ScoreRules:
    """
    Устанавливает правила начисления бонусов
    за каждый ивент
    """


class BonusType:
    """
    Отвечает за изменения поведения игры 
    при активации бонуса указанного типа
    """


class BonusActivator:
    """
    Отвечает за механику использования
    бонуса (по желанию игрока или автоматически)
    """


"""
Классы реализации
"""


class Matrix:
    """
    Реализует хранение текущего состояния игры
        двумерный массив
    """


class History:
    """
    Реализует хранение ходов игры, как состояния поля
        по идее будет хорош стек, т.к. он даст нам Undo хода
        если добавить второй стек, это даст нам операцию Redo
    """


class BonusList:
    """
    Реализует хранение имеющихся у игрока бонусов
        думаю, словарь "bouns: кол-во" 
    """


"""
Классы проектирования
"""


class Events:
    """

    Перенёс сюда, т.к. логичнее, что это класс проектирования

    Совершает преобразование (серию преобразований)
    состояния игрового поля после хода игрока:

    Какие шары уничтожены, какие комбинации это даёт
    Какие новые шары нужно создать?
    Как сместить шары на место уничтоженных?
    (Всё это реализуют отдельные классы)

    Рерурсивно повторяем процесс, пока получаются новые комбинации
    Проверяет, если ли валидные ходы после
    """


class EventDestroy:
    """
    Реализует в рамках Events логику поиска
    комбинаций шаров и их уничтожение
    На месте уничтоженных шаров думаю оставлять Undefined шары.
    """


class EventCreate:
    """
    Реализует в рамках Events логику
    Создания новых шаров, которые займут место уничтоженных.
    """


class EventShift:
    """
    Реализует в рамках Events логику
    Смещения уже существующих шаров на место уничтоженных.
    """
