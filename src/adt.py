"""
Классы анализа
"""

class UiMatrix:
    """
    Отвечает за вывод текущего состояния игры в консоль
    """


class UiUtils:
    """
    Ввыод на экран
    Очков пользователя
    Доступных для активации бонусов
    Текущий ход (номер)
    """


class UiCommand:
    """
    Отвечает за отображение интерфейса ввода комманд пользователем
    для управления игрой
    """


class UserCommand:
    """
    Отвечает за управление пользователем игрой
    через интерфейс
    - Ввод ходов
    - Конце игры
    - Начать заново
    - Отмотать до x хода
    - Активировать бонус
    """


class Element:
    """
    Элемент конкретного типа, который занимает
    клетку поля (A, B, C, D, E)
    Возможно, будет просто подкласс Enum
    """


class Score:
    """
    Отвечает за подсчёт очков для игрока
    в ходе игры.
    """


"""
Классы реализации
"""


class Matrix:
    """
    Реализует хранение текущего состояния игры
        двумерный массив
    """


class History:
    """
    Реализует хранение ходов игры, как состояния поля
        по идее будет хорош стек, т.к. он даст нам Undo хода
        если добавить второй стек, это даст нам операцию Redo
    """


class Bonus:
    """
    Реализует хранение имеющихся у игрока бонусов
        думаю, словарь "bouns: кол-во" 
    """


"""
Классы проектирования
"""


class Event:
    """

    Перенёс сюда, т.к. логичнее, что это класс проектирования
    Какие шары уничтожены, какие комбинации это даёт
    """


class MatrixFabric:
    """
    Преобразует состояние игрового поля после действий игрока
    """

